#ifndef EVALUATION_CONSTS_H_
#define EVALUATION_CONSTS_H_

#include "types.h"
#include "utils.h"

namespace evaluation {
static constexpr search::score_t kPieceFirstPSQ[6][64] = {
    {
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, -17, -23, 10, 0, 0,
        -5, -7, 0, 5, 10, 0, -7, -5,
        3, 3, 11, 16, 22, 9, 3, 3,
        16, 12, 17, 26, 32, 16, 11, 18,
        32, 24, 36, 41, 40, 37, 26, 41,
        81, 83, 85, 90, 90, 85, 83, 81,
        0, 0, 0, 0, 0, 0, 0, 0
    },
    {
        -73, -37, -16, -4, -3, -12, -38, -85,
        -27, -12, 0, 6, 7, 0, -11, -23,
        -17, -3, 11, 16, 17, 12, -3, -16,
        -7, 10, 22, 31, 35, 21, 11, -7,
        -7, 10, 22, 41, 45, 26, 18, -7,
        -17, 12, 21, 31, 27, 22, 12, -17,
        -27, -12, 0, 11, 12, 0, -12, -29,
        -85, -37, -16, -4, -3, -12, -38, -73
    },
    {
        0, -20, -10, -10, -10, -10, -20, 0,
        -10, 15, 5, 10, 10, 5, 15, -10,
        0, 15, 25, 20, 20, 25, 15, 0,
        7, 19, 30, 22, 22, 30, 19, 7,
        7, 19, 30, 22, 22, 30, 19, 7,
        0, 15, 25, 20, 20, 25, 15, 0,
        -10, 15, 5, 10, 10, 5, 15, -10,
        0, -20, -10, -10, -10, -10, -20, 0
    },
    {
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        14, 14, 14, 14, 14, 14, 14, 14,
        21, 21, 21, 21, 21, 21, 21, 21,
        45, 45, 45, 45, 45, 45, 45, 45,
        20, 20, 20, 20, 20, 20, 20, 20
    },
    {
        -20, -20, -20, -20, -20, -20, -20, -20,
        -15, -10, -5, 0, 0, -10, -5, -15,
        -10, -5, 0, 0, 0, 0, -5, -10,
        -5, 0, 0, 0, 0, 0, 0, -5,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        15, 15, 15, 15, 15, 15, 15, 15,
        10, 10, 10, 10, 10, 10, 10, 10
    },
    {
        0, 15, -15, -30, -30, -15, 15, 0,
        -5, 0, -15, -50, -50, -15, 0, -5,
        -75, -75, -75, -75, -75, -75, -75, -75,
        -75, -75, -75, -75, -75, -75, -75, -75,
        -75, -75, -75, -75, -75, -75, -75, -75,
        -75, -75, -75, -75, -75, -75, -75, -75,
        -75, -75, -75, -75, -75, -75, -75, -75,
        -75, -75, -75, -75, -75, -75, -75, -75
    }};

static constexpr search::score_t kPieceSecondPSQ[6][64] = {
    {
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        25, 25, 25, 25, 25, 25, 25, 25,
        60, 60, 60, 60, 60, 60, 60, 60,
        100, 100, 100, 100, 100, 100, 100, 100,
        0, 0, 0, 0, 0, 0, 0, 0
    },
    {
        -73, -37, -16, -4, -3, -12, -38, -85,
        -27, -12, 0, 6, 7, 0, -11, -23,
        -17, -3, 11, 16, 17, 12, -3, -16,
        -7, 10, 22, 31, 35, 21, 11, -7,
        -7, 10, 22, 41, 45, 26, 18, -7,
        -17, 12, 21, 31, 27, 22, 12, -17,
        -27, -12, 0, 11, 12, 0, -12, -29,
        -85, -37, -16, -4, -3, -12, -38, -73
    },
    {
        0, -10, -5, -5, -5, -5, -10, 0,
        -5, 10, 0, 5, 5, 0, 10, -5,
        0, 7, 15, 10, 10, 15, 7, 0,
        7, 12, 20, 18, 18, 20, 12, 7,
        7, 12, 20, 18, 18, 20, 12, 7,
        0, 7, 15, 10, 10, 15, 7, 0,
        -5, 10, 0, 5, 5, 0, 10, -5,
        0, -10, -5, -5, -5, -5, -10, 0
    },
    {
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        7, 7, 7, 7, 7, 7, 7, 7,
        10, 10, 10, 10, 10, 10, 10, 10,
        25, 25, 25, 25, 25, 25, 25, 25,
        10, 10, 10, 10, 10, 10, 10, 10
    },
    {
        -20, -20, -20, -20, -20, -20, -20, -20,
        -15, -10, -5, 0, 0, -10, -5, -15,
        -10, -5, 0, 0, 0, 0, -5, -10,
        -5, 0, 0, 0, 0, 0, 0, -5,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        15, 15, 15, 15, 15, 15, 15, 15,
        10, 10, 10, 10, 10, 10, 10, 10
    },
    {
        -25, -20, -10, 0, 0, -10, -20, -25,
        0, 5, 10, 15, 15, 10, 5, 0,
        5, 10, 17, 25, 25, 17, 10, 5,
        10, 20, 31, 41, 41, 31, 20, 10,
        10, 20, 31, 41, 41, 31, 20, 10,
        15, 25, 37, 45, 45, 37, 25, 15,
        20, 25, 40, 50, 50, 40, 25, 20,
        5, 10, 17, 25, 25, 17, 10, 5
    }};

constexpr search::score_t kPieceFirstWeight[6] = {70, 350, 340, 530, 1000, 0};
constexpr search::score_t kPieceSecondWeight[6] = {100, 320, 340, 530, 1000, 0};
constexpr search::score_t kQueenDistance[12] = {0, 120, 70, 45, 25, 16, 9, 4, 1, 0, 0};

constexpr search::score_t kPassedPawn[8] = {0, 85, 45, 30, 15, 5, 0, 0};
constexpr search::score_t kDoublePawn = -17;
constexpr search::score_t kIsolatedPawn = -5;
constexpr search::score_t kIsolatedPassedPawn = -15;
constexpr search::score_t kProtectedPawn = 5;
constexpr search::score_t kProtectedPassedPawn[8] = {0, 75, 20, 10, 5, 0, 0, 0};
constexpr search::score_t kPawnIsland = -12;

constexpr search::score_t kPawnShield[6] = {5, 44, 10, 0, 31, 0};
constexpr search::score_t kPawnStorm[6] = {-43, -31, -12, -8, -5, 0};
constexpr search::score_t kKingAttack[6] = {0, 10, 10, 20, 40, 0};
constexpr search::score_t kKingAttackTable[8] = {0, 0, 50, 75, 88, 94, 97, 99};

constexpr search::score_t kRookOpposingQueen = 10;
constexpr search::score_t kRookOpenCol = 24;
constexpr search::score_t kRookSemiOpenCol = 21;

constexpr search::score_t kKnightPair = -20;
constexpr search::score_t kBishopPair = 30;
constexpr search::score_t kRookPair = -20;

constexpr int8_t kPieceTaperedWeight[7] = {0, 0, 1, 1, 2, 4, 0};
constexpr int16_t kFullTaperedEval = 24;

constexpr search::score_t kDynamicEvalThreshold = 500;
constexpr search::score_t kPawnEvalThreshold = 350;
constexpr search::score_t kKingSafetyThreshold = 200;

void InitEvaluation();

}  // namespace evaluation

#endif  // EVALUATION_CONSTS_H_